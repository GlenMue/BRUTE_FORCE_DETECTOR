/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/tzvqzHlBdnS
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import Link from "next/link"
import { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem } from "@/components/ui/dropdown-menu"
import { Button } from "@/components/ui/button"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"
import { useState, useEffect } from "react";

export function Homepage() {
  // define types for dashboard data
  interface DashboardData {
    dashboard: {
      brute_force_attacks: number;
      brute_force_increase: number;
      blocked_ips: number;
      blocked_ips_increase: number;
          };
    recent_attacks: {
      ip_address: string;
      attempts: number;
      timestamp: string;
      status: string;
    }[];
  }
  // send request to backend to get dashboard data
  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);

  useEffect(() => {
    fetch("http://localhost:8000/network-security-dashboard")
      .then((response) => response.json())
      .then((data) => {
        setDashboardData(data.dashboard);
      console.log(dashboardData);
      console.log(data);

      })
      .catch((error) => {
        console.error("Error fetching dashboard data:", error);
      });
  }, []);
  return (
    <div className="flex flex-col min-h-screen bg-muted/40">
      <header className="bg-background border-b shadow-sm sticky top-0 z-10">
        <div className="container flex items-center justify-between h-16 px-4 md:px-6">
          <Link href="#" className="flex items-center gap-2 text-lg font-semibold" prefetch={false}>
            <ShieldIcon className="w-6 h-6" />
            <span>Brute Force Detector</span>
          </Link>
          <nav className="hidden items-center gap-6 font-medium text-sm md:flex">
            <Link href="#" className="text-muted-foreground hover:text-foreground" prefetch={false}>
              Dashboard
            </Link>
            <Link href="#" className="text-muted-foreground hover:text-foreground" prefetch={false}>
              Alerts
            </Link>
            <Link href="#" className="text-muted-foreground hover:text-foreground" prefetch={false}>
              Settings
            </Link>
          </nav>
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="ghost" size="icon" className="rounded-full">
                <img
                  src="/placeholder.svg"
                  width="36"
                  height="36"
                  className="rounded-full"
                  alt="Avatar"
                  style={{ aspectRatio: "36/36", objectFit: "cover" }}
                />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuLabel>John Doe</DropdownMenuLabel>
              <DropdownMenuSeparator />
              <DropdownMenuItem>Profile</DropdownMenuItem>
              <DropdownMenuItem>Settings</DropdownMenuItem>
              <DropdownMenuItem>Logout</DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      </header>
      <main className="flex-1 container px-4 py-8 md:px-6 md:py-12">
        <div className="grid gap-8">
          <div>
            <h1 className="text-3xl font-bold">Network Security Dashboard</h1>
            <p className="text-muted-foreground">Monitor and detect real-time brute force attacks on your network.</p>
          </div>
          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
            <Card>
              <CardHeader>
                <CardTitle>Brute Force Attacks</CardTitle>
                <CardDescription>Total brute force attacks detected in the last 24 hours.</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-between">
                  <div className="text-4xl font-bold">{dashboardData?.dashboard?.brute_force_attacks}</div>
                  <div className="flex items-center gap-2 text-sm text-muted-foreground">
                    <ArrowUpIcon className="w-4 h-4 text-green-500" />
                    <span>{dashboardData?.dashboard?.brute_force_increase}% increase</span>
                  </div>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Blocked IP Addresses</CardTitle>
                <CardDescription>Number of IP addresses blocked due to brute force attacks.</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-between">
                  <div className="text-4xl font-bold">18</div>
                  <div className="flex items-center gap-2 text-sm text-muted-foreground">
                    <ArrowUpIcon className="w-4 h-4 text-green-500" />
                    <span>{dashboardData?.dashboard?.blocked_ips_increase}% increase</span>
                  </div>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader>
                <CardTitle>Successful Logins</CardTitle>
                <CardDescription>Number of successful logins in the last 24 hours.</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="flex items-center justify-between">
                  <div className="text-4xl font-bold">1,234</div>
                  <div className="flex items-center gap-2 text-sm text-muted-foreground">
                    <ArrowUpIcon className="w-4 h-4 text-green-500" />
                    <span>3% increase</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
          <div>
            <h2 className="text-2xl font-bold">Recent Brute Force Attacks</h2>
            <p className="text-muted-foreground">
              View the details of the most recent brute force attacks detected on your network.
            </p>
            <div className="mt-6">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>IP Address</TableHead>
                    <TableHead>Attempts</TableHead>
                    <TableHead>Timestamp</TableHead>
                    <TableHead>Status</TableHead>
                    <TableHead>
                      <span className="sr-only">Actions</span>
                    </TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {/* add all the recent attacks */}
                  {dashboardData?.recent_attacks?.map((attack) => (
                    <TableRow key={attack.ip_address}>
                      <TableCell>{attack.ip_address}</TableCell>
                      <TableCell>{attack.attempts}</TableCell>
                      <TableCell>{attack.timestamp}</TableCell>
                      <TableCell>
                        <Badge variant="destructive">{attack.status}</Badge>
                      </TableCell>
                      <TableCell>
                        <DropdownMenu>
                          <DropdownMenuTrigger asChild>
                            <Button variant="ghost" size="icon">
                              <MoveVerticalIcon className="w-4 h-4" />
                              <span className="sr-only">More actions</span>
                            </Button>
                          </DropdownMenuTrigger>
                          <DropdownMenuContent align="end">
                            <DropdownMenuItem>View Details</DropdownMenuItem>
                            <DropdownMenuItem>Unblock IP</DropdownMenuItem>
                          </DropdownMenuContent>
                        </DropdownMenu>
                      </TableCell>
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </div>
          </div>
        </div>
      </main>
      <footer className="bg-background border-t shadow-sm">
        <div className="container flex items-center justify-between h-16 px-4 md:px-6">
          <div className="text-sm text-muted-foreground">&copy; 2023 Brute Force Detector. All rights reserved.</div>
          <div className="flex items-center gap-4">
            <Link href="#" className="text-muted-foreground hover:text-foreground" prefetch={false}>
              Privacy Policy
            </Link>
            <Link href="#" className="text-muted-foreground hover:text-foreground" prefetch={false}>
              Terms of Service
            </Link>
          </div>
        </div>
      </footer>
    </div>
  )
}

function ArrowUpIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m5 12 7-7 7 7" />
      <path d="M12 19V5" />
    </svg>
  )
}


function MoveVerticalIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="8 18 12 22 16 18" />
      <polyline points="8 6 12 2 16 6" />
      <line x1="12" x2="12" y1="2" y2="22" />
    </svg>
  )
}


function ShieldIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z" />
    </svg>
  )
}
